# Conexao com PostgreSQL Hospedado
#spring.datasource.url=jdbc:postgresql://dpg-ct7pode8ii6s73c7uorg-a.oregon-postgres.render.com:5432/bd_ecommerce
#spring.datasource.username=admin
#spring.datasource.password=QGGV1V1KUrD94dhlzqdHmDJYZK1mbN5e
#spring.datasource.driver-class-name=org.postgresql.Driver

# Conexao com PostgreSQL Hospedado Google Cloud
#spring.datasource.url=jdbc:postgresql://127.0.0.1:5432/bd-commerce-v01-local
#spring.datasource.username=postgres
#spring.datasource.password=admin2025
#spring.datasource.driver-class-name=org.postgresql.Driver

# Conexao com PostgreSQL
spring.datasource.url=jdbc:postgresql://localhost:5432/bd_cafeteriaweb
spring.datasource.username=admin
spring.datasource.password=admin1234
spring.datasource.driver-class-name=org.postgresql.Driver

# Flyway
# Habilita o comando clean (normalmente e desabilitado por seguranca)
spring.flyway.clean-disabled=true

# Se as migracoes falharem, o banco sera limpo
spring.flyway.clean-on-validation-error=true
# Se o banco nao tiver historico, cria o baseline
spring.flyway.baseline-on-migrate=true

#Isso impede que o Spring Boot coloque o stacktrace no corpo das respostas de erro automaticamente.
server.error.include-stacktrace=never

# Configuracoes de inicializacao SQL
spring.sql.init.continue-on-error=true
spring.sql.init.mode=always

# Recursos estaticos
spring.mvc.static-path-pattern=/static/**
spring.resources.static-locations=classpath:/static/

# Jackson (JSON)
spring.jackson.deserialization.fail-on-unknown-properties=true
spring.jackson.deserialization.fail-on-ignored-properties=true
spring.jackson.serialization.fail-on-empty-beans=false

# Armazenamento local
ecommerce.storage.local.diretorio-fotos=C:/Alfa System 2024/imagens

# Google Drive
#ecommerce.storage.drive.credentials-path=src/main/resources/ecommerce-linda-cosmeticos-b5a4a6905b9c.json
#ecommerce.storage.drive.application-name=Ecommerce Linda Cosmeticos Google Drive
#ecommerce.storage.drive.diretorio-fotos=img-linda-cosmeticos

# Client ID da sua aplicação Gerencianet (sandbox ou produção)
gerencianet.client-id=Client_Id_10b144111d69c400e2edcbe05a2de4fe1f1f9c8f

# Client Secret da sua aplicação Gerencianet (sandbox ou produção)
gerencianet.client-secret=Client_Secret_d5edea97bf4a3304c7069c1616da1cc88a528b34

gerencianet.sandbox=true
gerencianet.certificado-caminho=certificados/homologacao-765675-ecommerce-v01-teste.p12
gerencianet.certificado-senha=java@#ComAngular25

gerencianet.api-url=https://api-pix-h.gerencianet.com.br

# definindo um usuario e uma senha qualquer para acessaminha api depois de intalar o spring security
spring.security.user.name=admin
spring.security.user.password=123456